openapi: 3.0.0
info:
  title: AROSAJE API
  description: An API for data of Arosaje Application
  version: 1.0.0

servers:
  - url: http://localhost:4000/api

paths:
  /users:
    post:
      tags: [Users]
      summary: Create a new user
      description: Creates a new user and returns it
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        '500':
          description: Failed to create user

    get:
      tags: [Users]
      summary: Get all users
      description: Returns a list of all users
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/User'
        '500':
          description: Failed to get users

  /users/{id}:
    get:
      tags: [Users]
      summary: Get user by ID
      description: Returns the user with the specified ID
      parameters:
        - name: id
          in: path
          description: ID of the user to retrieve
          required: true
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        '404':
          description: User not found
        '500':
          description: Failed to get user

    put:
      tags: [Users]
      summary: Update user
      description: Updates the user with the specified ID and returns it
      parameters:
        - name: id
          in: path
          description: ID of the user to update
          required: true
          schema:
            type: integer
            format: int32
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        '404':
          description: User not found
        '500':
          description: Failed to update user

    delete:
      tags: [Users]
      summary: Delete user
      description: Deletes the user with the specified ID
      parameters:
        - name: id
          in: path
          description: ID of the user to delete
          required: true
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        '404':
          description: User not found
        '500':
          description: Failed to delete user

components:
  schemas:
    User:
      type: "object"
      properties:
        ID:
          type: "integer"
          format: "int64"
          readOnly: true
          example: 1
        USERNAME:
          type: "string"
          example: "johndoe"
        FIRST_NAME:
          type: "string"
          example: "John"
        LAST_NAME:
          type: "string"
          example: "Doe"
        BIRTH_DATE:
          type: "string"
          format: "date"
          example: "1990-01-01"
        LAST_GPS_LOCALIZATION:
          type: "string"
          example: "48.8566,2.3522"
        LAST_GPS_LOCALIZATION_TIMESTAMP:
          type: "string"
          format: "date-time"
          example: "2022-02-02T10:30:00Z"
        ADDRESS_ID:
          type: "integer"
          format: "int64"
          example: 1
        LOGIN_ID:
          type: "integer"
          format: "int64"
          example: 1
        ROLE_ID:
          type: "integer"
          format: "int64"
          example: 1
        PROFILE_PICTURE_ID:
          type: "integer"
          format: "int64"
          example: 1
        CREATED_AT:
          type: "string"
          format: "date-time"
          readOnly: true
          example: "2022-02-02T10:30:00Z"
        UPDATED_AT:
          type: "string"
          format: "date-time"
          readOnly: true
          example: "2022-02-02T10:30:00Z"

      required:
        - USERNAME
        - FIRST_NAME
        - LAST_NAME
        - ADDRESS_ID
        - LOGIN_ID
        - ROLE_ID
