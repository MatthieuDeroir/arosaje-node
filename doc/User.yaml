openapi: 3.0.3
info:
  title: Arosaje API
  version: 1.0.0
  description: API for managing users
servers:
  - url: http://localhost:8080/api/user
tags:
    - name: Users
      description: API for managing users in the system
paths:
  /users:
    get:
      tags:
        - Users
      summary: Get all users
      description: Returns a list of all users
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/User'
    post:
      tags:
        - Users
      summary: Add a new user
      description: Adds a new user to the system
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
      responses:
        '201':
          description: Created
    put:
      tags:
        - Users
      summary: Update an existing user
      description: Updates an existing user in the system
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
      responses:
        '200':
          description: Successful response
  /users/{id}:
    get:
      tags:
        - Users
      summary: Get user by ID
      description: Returns a single user by their ID
      parameters:
        - name: id
          in: path
          description: The ID of the user to retrieve
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
components:
  schemas:
    User:
      type: object
      properties:
        email:
          type: string
          example: "torek@example.com"
        password:
          type: string
          example: 5f4dcc3b5aa765d61d8327deb882cf99
        username:
          type: string
          example: "Torek"
        firstName:
          type: string
          example: "Tom"
        lastName:
          type: string
          example: "Zarek"
        streetNumber:
          type: string
          example: 5
        streetName:
          type: string
          example: "Rue de la Paix"
        zipCode:
          type: string
          example: "75000"
        city:
          type: string
          example: "Paris"
        country:
          type: string
          example: "France"
        birthDate:
          type: string
          example: "1980-01-01"
        lastGpsLocation:
          type: string
          example: "48.8566,2.3522"
        lastGpsLocationDate:
          type: string
          example: "2021-01-01T00:00:00.000Z"
        lastLoginDate:
          type: string
          example: "2021-01-01T00:00:00.000Z"
        roleId:
          type: integer
          example: 1
        createdAt:
          type: string
          example: "2021-01-01T00:00:00.000Z"
        updatedAt:
          type: string
          example: "2021-01-01T00:00:00.000Z"