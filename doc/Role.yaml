openapi: 3.0.0
info:
  title: AROSAJE API
  description: An API for data of Arosaje Application
  version: 1.0.0

servers:
  - url: http://localhost:4000/api

paths:
  /roles:
    post:
      tags: [Role]
      summary: Create a new role
      description: Creates a new role and returns it
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Role'
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Role'
        '500':
          description: Failed to create role

    get:
      tags: [Role]
      summary: Get all roles
      description: Returns a list of all roles
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Role'
        '500':
          description: Failed to get roles

  /roles/{id}:
    get:
      tags: [Role]
      summary: Get role by ID
      description: Returns the role with the specified ID
      parameters:
        - name: id
          in: path
          description: ID of the role to retrieve
          required: true
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Role'
        '404':
          description: Role not found
        '500':
          description: Failed to get role

    put:
      tags: [Role]
      summary: Update role
      description: Updates the role with the specified ID and returns it
      parameters:
        - name: id
          in: path
          description: ID of the role to update
          required: true
          schema:
            type: integer
            format: int32
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Role'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Role'
        '404':
          description: Role not found
        '500':
          description: Failed to update role

    delete:
      tags: [Role]
      summary: Delete role
      description: Deletes the role with the specified ID
      parameters:
        - name: id
          in: path
          description: ID of the role to delete
          required: true
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: 'Role deleted successfully'
        '404':
          description: Role not found
        '500':
          description: Failed to delete role

components:
  schemas:
    Role:
      type: object
      properties:
        ID:
          type: integer
          format: int64
          readOnly: true
          example: 1
        DESCRIPTION:
          type: string
          example: "Administrator"
      required:
        - DESCRIPTION